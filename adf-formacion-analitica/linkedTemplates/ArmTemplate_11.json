{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-formacion-analitica"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_copydata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_data_parquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "messi_csv_entrada",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "messi_parquet_salida",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ernestodavogustto"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-09T15:34:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_databricks_for_each_Azul_Selser_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TABLE_SCHEMA, TABLE_NAME FROM Information_Schema.Tables\nWHERE TABLE_SCHEMA != 'dbo' AND TABLE_TYPE = 'BASE TABLE'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AW_AzureSqlTable_Azul_Selser",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "limpieza y exporta en parquet",
									"description": "-elimina registros all null\n-elimina registros duplicados\n-elimina columnas 5% null\n-guarda en formato parquet",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/azulselser@gmail.com/ADF: Conexión al datalake_Azul_Selser",
										"baseParameters": {
											"file_name": {
												"value": "@item().TABLE_NAME ",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks_Azul_Selser",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Azul_Selser/tarea_15.05/Demos"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-14T22:21:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_flow_Azul_Selser')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "entrada_peliculas_Azul_Selser",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "salida_dataflow_Azul_Selser",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Azul_Selser/clase_10.05"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-11T15:40:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_metadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "para extraer los nombres de las carpetas del blob de azure",
				"activities": [
					{
						"name": "Get Metadata1",
						"description": "esto nos a la lista de todos los nombres",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "prueba_Metadata_Azul_Selser",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "ParquetReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "limpieza y exporta en parquet",
									"description": "-elimina registros all null\n-elimina registros duplicados\n-elimina columnas 5% null\n-guarda en formato parquet",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/azulselser@gmail.com/ADF: Conexión al datalake_Azul_Selser",
										"baseParameters": {
											"file_name": {
												"value": "@item().TABLE_NAME ",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks_Azul_Selser",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Azul_Selser/tarea_15.05/Demos"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-15T03:40:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_parametrizacion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Cargas",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "files_csv_ernesto",
								"type": "DatasetReference",
								"parameters": {
									"cta_almacenamiento": {
										"value": "@pipeline().parameters.cta_almacenamiento",
										"type": "Expression"
									},
									"folder": {
										"value": "@pipeline().parameters.folder_csv",
										"type": "Expression"
									},
									"file": "cargas_2023.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "files_parquet_ernesto",
								"type": "DatasetReference",
								"parameters": {
									"cta_almacenamiento": {
										"value": "@pipeline().parameters.cta_almacenamiento",
										"type": "Expression"
									},
									"folder": {
										"value": "@pipeline().parameters.folder_parquet",
										"type": "Expression"
									},
									"file": "cargas"
								}
							}
						]
					},
					{
						"name": "Sitios",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "files_csv_ernesto",
								"type": "DatasetReference",
								"parameters": {
									"cta_almacenamiento": {
										"value": "@pipeline().parameters.cta_almacenamiento",
										"type": "Expression"
									},
									"folder": {
										"value": "@pipeline().parameters.folder_csv",
										"type": "Expression"
									},
									"file": "sitios_2023.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "files_parquet_ernesto",
								"type": "DatasetReference",
								"parameters": {
									"cta_almacenamiento": {
										"value": "@pipeline().parameters.cta_almacenamiento",
										"type": "Expression"
									},
									"folder": {
										"value": "@pipeline().parameters.folder_parquet",
										"type": "Expression"
									},
									"file": "sitios"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"cta_almacenamiento": {
						"type": "string",
						"defaultValue": "ernestodavogustto"
					},
					"folder_csv": {
						"type": "string",
						"defaultValue": "ADFPractica/files_csv"
					},
					"folder_parquet": {
						"type": "string",
						"defaultValue": "ADFPractica/files_parquet"
					}
				},
				"folder": {
					"name": "ernestodavogustto/parametrizaciones"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-10T15:40:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_parametrizacion_Azul_Selser')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cargas_Azul_Selser",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "file_csv_Azul_Selser",
								"type": "DatasetReference",
								"parameters": {
									"contenedor": {
										"value": "@pipeline().parameters.contenedor",
										"type": "Expression"
									},
									"carpeta": {
										"value": "@pipeline().parameters.carpeta_entrada",
										"type": "Expression"
									},
									"archivo": "cargas_2023.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "file_parquet_Azul_Selser",
								"type": "DatasetReference",
								"parameters": {
									"contenedor": {
										"value": "@pipeline().parameters.contenedor",
										"type": "Expression"
									},
									"carpeta": {
										"value": "@pipeline().parameters.carpeta_salida",
										"type": "Expression"
									},
									"archivo": "cargas_2023"
								}
							}
						]
					},
					{
						"name": "Sitios_Azul_Selser",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "file_csv_Azul_Selser",
								"type": "DatasetReference",
								"parameters": {
									"contenedor": {
										"value": "@pipeline().parameters.contenedor",
										"type": "Expression"
									},
									"carpeta": {
										"value": "@pipeline().parameters.carpeta_entrada",
										"type": "Expression"
									},
									"archivo": "sitios_2023.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "file_parquet_Azul_Selser",
								"type": "DatasetReference",
								"parameters": {
									"contenedor": {
										"value": "@pipeline().parameters.contenedor",
										"type": "Expression"
									},
									"carpeta": {
										"value": "@pipeline().parameters.carpeta_salida",
										"type": "Expression"
									},
									"archivo": "sitios_2023"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"contenedor": {
						"type": "string",
						"defaultValue": "azulselser/clase_parametrizacion"
					},
					"carpeta_entrada": {
						"type": "string",
						"defaultValue": "files_csv"
					},
					"carpeta_salida": {
						"type": "string",
						"defaultValue": "files_parquet"
					}
				},
				"folder": {
					"name": "Azul_Selser/clase_10.05"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-11T15:40:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_parametrizacion_juli')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_sitios",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "files_csv_parametrizado",
								"type": "DatasetReference",
								"parameters": {
									"contenedor": {
										"value": "@pipeline().parameters.almacenamiento",
										"type": "Expression"
									},
									"carpeta": {
										"value": "@pipeline().parameters.carpeta_csv",
										"type": "Expression"
									},
									"archivo": "sitios_2023.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "files_parquet_parametrizado",
								"type": "DatasetReference",
								"parameters": {
									"contenedor": {
										"value": "@pipeline().parameters.almacenamiento",
										"type": "Expression"
									},
									"carpeta": {
										"value": "@pipeline().parameters.carpeta_parquet",
										"type": "Expression"
									},
									"archivo": "sitios_2023.parquet"
								}
							}
						]
					},
					{
						"name": "Copy_cargas",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_sitios",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "files_csv_parametrizado",
								"type": "DatasetReference",
								"parameters": {
									"contenedor": {
										"value": "@pipeline().parameters.almacenamiento",
										"type": "Expression"
									},
									"carpeta": {
										"value": "@pipeline().parameters.carpeta_csv",
										"type": "Expression"
									},
									"archivo": "cargas_2023.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "files_parquet_parametrizado",
								"type": "DatasetReference",
								"parameters": {
									"contenedor": {
										"value": "@pipeline().parameters.almacenamiento",
										"type": "Expression"
									},
									"carpeta": {
										"value": "@pipeline().parameters.carpeta_parquet",
										"type": "Expression"
									},
									"archivo": "cargas_2023.parquet"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"almacenamiento": {
						"type": "string",
						"defaultValue": "juliancohen"
					},
					"carpeta_csv": {
						"type": "string",
						"defaultValue": "Clase14/Parametrizacion/parametrizacion_csv"
					},
					"carpeta_parquet": {
						"type": "string",
						"defaultValue": "Clase14/Parametrizacion/parametrizacion_parquet"
					}
				},
				"folder": {
					"name": "juliancohen"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-11T17:05:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_tarea_08-05')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copia_a_contenedor",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "vehicles_csv_entrada",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vehicles_csv_salida",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copia_cambio_parquet",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "copia_a_contenedor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "vehicles_csv_entrada",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vehicles_parquet_salida",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "juliancohen"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-11T00:08:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_tarea_Azul_Selser')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "pl de practica",
				"activities": [
					{
						"name": "copiar_data_otro_contenedor_Azul_Selser",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "csv_entrada_Azul_Selser",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "csv_salida_Azul_Selser",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Azul_Selser/tarea_08.05"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-11T15:40:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/prueba1_mariasol')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"description": "@variables('nombretabla')",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('nombretabla')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "adventureworks_mariasol",
											"type": "DatasetReference",
											"parameters": {
												"nombre": "@item()"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "adventureworkscsv_mariasol",
											"type": "DatasetReference",
											"parameters": {
												"nombrecsv": "@item()"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"nombretabla": {
						"type": "Array",
						"defaultValue": [
							"Product",
							"ProductCategory",
							"ProductModel",
							"ProductModelProductDescription",
							"ProductDescription",
							"SalesOrderDetail",
							"SalesOrderHeader",
							"Address",
							"Customer",
							"CustomerAddress"
						]
					},
					"list_file": {
						"type": "Array"
					},
					"list_files": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "maria_sol_serritelli"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-15T04:24:06Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/prueba_unificar_parquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "unifica parquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "adventureWorks/trusted/Product",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "origen_parquet_particionado_melina1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "salida_parquet_unificado_melina1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "melina-yanguas"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-16T04:41:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoviesToTrusted')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CamilaGomez"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "movies_Camila",
								"type": "DatasetReference"
							},
							"name": "EntradaMovies"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SalidaMovies",
								"type": "DatasetReference"
							},
							"name": "SalidaMovies"
						}
					],
					"transformations": [
						{
							"name": "ExtractYear",
							"description": "Extarer 'Año' de la columna title"
						}
					],
					"scriptLines": [
						"source(output(",
						"          movieId as integer,",
						"          title as string,",
						"          genres as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> EntradaMovies",
						"EntradaMovies derive(year = toInteger(trim(right(title,6),'()')),",
						"          title = toString(left(title, length(title)-6))) ~> ExtractYear",
						"ExtractYear sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SalidaMovies"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SimpsonsToTrusted')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CamilaGomez"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "entrada_characters_camila",
								"type": "DatasetReference"
							},
							"name": "EntradaCharacters"
						},
						{
							"dataset": {
								"referenceName": "entrada_episodes_camila",
								"type": "DatasetReference"
							},
							"name": "EntradaEpisodes"
						},
						{
							"dataset": {
								"referenceName": "entrada_location_camila",
								"type": "DatasetReference"
							},
							"name": "EntradaLocation"
						},
						{
							"dataset": {
								"referenceName": "entrada_script_lines_camila",
								"type": "DatasetReference"
							},
							"name": "EntradaScriptLines"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Salida_LocationScriptLines_parquet_Camila",
								"type": "DatasetReference"
							},
							"name": "SalidaLocationScriptLines"
						},
						{
							"dataset": {
								"referenceName": "salida_CharactersScriptLines_parquet_camila",
								"type": "DatasetReference"
							},
							"name": "SalidaCharactersScriptLine"
						},
						{
							"dataset": {
								"referenceName": "Salida_EpisodesScriptLines_parquet_Camila",
								"type": "DatasetReference"
							},
							"name": "SalidaEspisodesScriptLines"
						}
					],
					"transformations": [
						{
							"name": "SelectCharacters"
						},
						{
							"name": "SelectEpisodes"
						},
						{
							"name": "SelectLocation"
						},
						{
							"name": "SelectScriptLines"
						},
						{
							"name": "LocationScriptLines"
						},
						{
							"name": "CharactersScriptLines"
						},
						{
							"name": "EpisodesScriptLines"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id as integer,",
						"          name as string,",
						"          normalized_name as string,",
						"          gender as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> EntradaCharacters",
						"source(output(",
						"          id as integer,",
						"          image_url as string,",
						"          imdb_rating as float,",
						"          imdb_votes as float,",
						"          number_in_season as integer,",
						"          number_in_series as integer,",
						"          original_air_date as date,",
						"          original_air_year as integer,",
						"          production_code as string,",
						"          season as integer,",
						"          title as string,",
						"          us_viewers_in_millions as integer,",
						"          video_url as string,",
						"          views as float",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> EntradaEpisodes",
						"source(output(",
						"          id as integer,",
						"          name as string,",
						"          normalized_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> EntradaLocation",
						"source(output(",
						"          id as integer,",
						"          episode_id as integer,",
						"          number as string,",
						"          raw_text as string,",
						"          timestamp_in_ms as integer,",
						"          speaking_line as boolean,",
						"          character_id as integer,",
						"          location_id as integer,",
						"          raw_character_text as string,",
						"          raw_location_text as string,",
						"          spoken_words as string,",
						"          normalized_text as string,",
						"          word_count as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> EntradaScriptLines",
						"EntradaCharacters select(mapColumn(",
						"          id,",
						"          normalized_name",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectCharacters",
						"EntradaEpisodes select(mapColumn(",
						"          id,",
						"          imdb_rating,",
						"          imdb_votes,",
						"          number_in_season,",
						"          number_in_series,",
						"          original_air_date,",
						"          original_air_year,",
						"          production_code,",
						"          season,",
						"          title,",
						"          us_viewers_in_millions,",
						"          views",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectEpisodes",
						"EntradaLocation select(mapColumn(",
						"          id,",
						"          normalized_name",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectLocation",
						"EntradaScriptLines select(mapColumn(",
						"          id,",
						"          episode_id,",
						"          number,",
						"          timestamp_in_ms,",
						"          speaking_line,",
						"          character_id,",
						"          location_id,",
						"          raw_character_text,",
						"          raw_location_text,",
						"          spoken_words,",
						"          word_count",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectScriptLines",
						"SelectLocation, SelectScriptLines join(SelectLocation@id == location_id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LocationScriptLines",
						"SelectCharacters, SelectScriptLines join(SelectCharacters@id == character_id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> CharactersScriptLines",
						"SelectEpisodes, SelectScriptLines join(SelectEpisodes@id == episode_id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> EpisodesScriptLines",
						"LocationScriptLines sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          movieId as integer,",
						"          title as string,",
						"          genres as string,",
						"          year as integer",
						"     ),",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SalidaLocationScriptLines",
						"CharactersScriptLines sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SalidaCharactersScriptLine",
						"EpisodesScriptLines sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          movieId as integer,",
						"          title as string,",
						"          genres as string,",
						"          year as integer",
						"     ),",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SalidaEspisodesScriptLines"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_movie')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "JuanCaceffo/movies"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "movies_juanK",
								"type": "DatasetReference"
							},
							"name": "MOVIES"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "movies_salida_Juank",
								"type": "DatasetReference"
							},
							"name": "moviesTrusted"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> MOVIES",
						"MOVIES sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> moviesTrusted"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_movies_Azul_Selser')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Azul_Selser/clase_10.05"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "entrada_peliculas_Azul_Selser",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "salida_dataflow_Azul_Selser",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          movieId as string,",
						"          title as string,",
						"          genres as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdvWks_RawTrustedRefined')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Look up de tablas en SQL DataBase. Estapa raw con copy data en csv. Etapa trsuted con databricks en parquet. Etapa refined con databricks nuevamente a SQL DataBase",
				"activities": [
					{
						"name": "LookupTablas",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TABLE_SCHEMA, TABLE_NAME FROM Information_Schema.Tables\nWHERE TABLE_SCHEMA != 'dbo' AND TABLE_TYPE = 'BASE TABLE'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AdventureWorksCamila",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "AdvWks-RawToTrusted",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AdvWks_OriginToRaw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AdvWks-RawToTrusted",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"lista_tablas": {
									"value": "@activity('LookupTablas').output.value",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "AdvWks_OriginToRaw",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LookupTablas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AdvWks_OriginToRaw",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Camila-Gomez/AdventureWorks"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-15T21:15:33Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data Factory 2 y 3 - Ejecucion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute DF2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Data Factory 2 - Tarea",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute DF3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute DF2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Data Factory 3 - Tarea",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "josegerstner"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-14T23:07:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetTableListAndTriggerCopyData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupTableList",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TABLE_SCHEMA, TABLE_NAME FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' and TABLE_SCHEMA = 'SalesLT' and TABLE_NAME <> 'ProductModel'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable_JuanMaidana",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Execute Extraccion SQL - CSV",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LookupTableList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ExtraccionSQL-CSV_JuanMaidana",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"tableList": {
									"value": "@activity('LookupTableList').output.value",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Procesamiento CSV - Parquet",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Extraccion SQL - CSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Procesamiento_JuanMaidana",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"tableList": {
									"value": "@activity('LookupTableList').output.value",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "juan_maidana/AdventureWorks"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-14T22:18:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetTableListAndTriggerCopyData_ernesto')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupTableList",
						"description": "Retrieve the table list from my database",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TABLE_SCHEMA, TABLE_NAME FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' and TABLE_SCHEMA = 'SalesLT' and TABLE_NAME <> 'ProductModel'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable_ernesto",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "TriggerCopy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LookupTableList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_AdventureWorks_ernesto",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"tableList": {
									"value": "@activity('LookupTableList').output.value",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ernestodavogustto/Ingesta_AdventureWorks"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-12T01:44:17Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LOAD_TABLE_NAMES_PDF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Table_Names",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TABLE_SCHEMA, TABLE_NAME FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' and TABLE_SCHEMA = 'SalesLT' and TABLE_NAME <> 'ProductModel'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_AdvWorks_PDF",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Launch_Raw_Trusted_Process",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup_Table_Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ORIGIN_RAW_TRUSTED_PDF",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"table_names": {
									"value": "@activity('Lookup_Table_Names').output.value",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pablo_foglia/AdventureWorks"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-15T19:21:09Z"
			},
			"dependsOn": []
		}
	]
}